% OUTPUT DEMANDED GENERATOR
c(S,odg,0) :- substation(S),
	c(S,ig,not_running),
	not ab(S).
c(S,odg,0) :- substation(S),
	c(S,ig,running),
	c(S,il,L),
	p(S,ipext,E),
	L < E,
	not ab(S).
c(S,odg,DIFF) :- substation(S),
	c(S,ig,running),
	c(S,il,L),
	p(S,ipext,E),
	L >= E,
	DIFF = L - E,
	not ab(S).

% OUTPUT POWER BATTERY
p(S,opb,DIFF) :- substation(S),
	c(S,il,L),
	p(S,ipext,E),
	L <= E,
	DIFF = E - L,
	not ab(S).
p(S,opb,0) :- substation(S),
	c(S,il,L),
	p(S,ipext,E),
	L > E,
	not ab(S).

% OUTPUT DEMANDED BATTERY
c(S,odb,0) :- substation(S),
	c(S,ig,running),
	not ab(S).
c(S,odb,0) :- substation(S),
	c(S,il,L),
	p(S,ipext,E),
	L <= E,
	not ab(S).
c(S,odb,D) :- substation(S), normal_demanded_battery_power(S,D), ok(S).
c(S,odb,X) :- substation(S), normal_demanded_battery_power(S,D), X = D * 2, bad_battery_control(S).

normal_demanded_battery_power(S,DIFF) :- substation(S),
	c(S,ig,not_running),
	c(S,il,L),
	p(S,ipext,E),
	L > E,
	DIFF = L - E,
	not ab(S).

% OUTPUT POWER SYSTEM
p(S,ops,P) :- substation(S), 
	c(S,il,L),
	adjl(L,ADJL),
	powsum(S,P),
	ADJL > P,
	not ab(S).
p(S,ops,ADJL) :- substation(S), 
	c(S,il,L),
	adjl(L,ADJL),
	powsum(S,P),
	ADJL <= P,
	not ab(S).

% HELPING PREDICATES
powsum(S,POWER) :- substation(S),
	p(S,ipext,IN),
	p(S,ipg,G),
	p(S,ipb,B), 
	p(S,opb,OPB),
	SUM1 = G + B,
	SUM2 = SUM1 + IN,
	POWER = SUM2 - OPB.

adjl(L,ADJ) :-
	X = L * 3,
	ADJ = X / 2,
	#int(L).
